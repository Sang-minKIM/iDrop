name: Java CI with Gradle

on:
  push:
    branches: [ "be" ]
  pull_request:
    branches: [ "be" ]

env:
  AWS_REGION: ap-northeast-2

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: JDK 17세팅
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: properties 설정
      run: |
        cd BE/iDrop
        mkdir -p ./src/main/resources/env
        echo touch ./src/main/resources/env/mysql.yml
        echo touch ./src/main/resources/env/jwt.yml
        echo touch ./src/main/resources/data.sql
        
        echo "${{ secrets.MYSQL_INFO }}" > ./src/main/resources/env/mysql.yml
        echo "${{ secrets.AUTH_INFO }}" > ./src/main/resources/env/jwt.yml
        echo "${{ secrets.DATA }}" > ./src/main/resources/data.sql
        echo cat ./src/main/resources/data.sql

    - name: gradlew 실행 권한 설정
      run: |
        cd BE/iDrop
        chmod +x ./gradlew

    - name: 빌드
      run: |
        cd BE/iDrop
        ./gradlew clean build -x test

    - name: AWS credential 설정
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}

    - name: S3 업로드
      run: aws deploy push --application-name ${{ secrets.CODE_DEPLOY_APP_NAME }} --ignore-hidden-files --s3-location s3://${{ secrets.BUCKET_NAME }}/build/$GITHUB_SHA.zip --source ./BE/iDrop

    - name: EC2 배포
      run: aws deploy create-deployment --application-name ${{ secrets.CODE_DEPLOY_APP_NAME }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ secrets.DEPLOYMENT_GROUP_NAME }} --s3-location bucket=${{ secrets.BUCKET_NAME }},key=build/$GITHUB_SHA.zip,bundleType=zip
